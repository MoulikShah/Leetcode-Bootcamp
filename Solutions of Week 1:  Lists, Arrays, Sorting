(1) Two Sum II - Input Array Is Sorted

Solution:- 

class Solution:

    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        left_pointer, right_pointer = 0, len(numbers) - 1
        while left_pointer < right_pointer:
            current_sum = numbers[left_pointer] + numbers[right_pointer]
            if current_sum == target:
                return [left_pointer + 1, right_pointer + 1]
            if current_sum < target:
                left_pointer += 1
            else:
                right_pointer -= 1
        return []


(2) Product of Array Except Self

Solution:- 


class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        num_length = len(nums)
        answer = [1] * num_length
        left = 1
        for i in range(num_length):
            answer[i] = left
            left *= nums[i]
        right = 1
        for i in range(num_length - 1, -1, -1):
            answer[i] *= right
            right *= nums[i]
        return answer


(3) Sort Colors

Solution:-

class Solution:
    def sortColors(self, nums: List[int]) -> None:
        next_zero_index, next_two_index, current_index = -1, len(nums), 0
        while current_index < next_two_index:
            if nums[current_index] == 0:
                next_zero_index += 1
                nums[next_zero_index], nums[current_index] = nums[current_index], nums[next_zero_index]
                current_index += 1
            elif nums[current_index] == 2:
                next_two_index -= 1
                nums[next_two_index], nums[current_index] = nums[current_index], nums[next_two_index]
            else:
                current_index += 1
