(1) String to Integer (atoi)

class Solution(object):
    def myAtoi(self, s):
        num = '0123456789'
        res = ''
        for x in s:
            if x == ' ' and len(res) == 0:
                continue
            if x != ' ' and (x in '-+' or x in num) and len(res) == 0:
                res += x
            elif x in num:
                res += x
            else:
                break
        if res == '' or res in '-+':
            return 0
        else:
# to avoid int casting simply run a loop and use ord(char) - ord('0')
            if int(res) < -(2**31):
                return -(2**31)
            elif int(res) > (2**31 - 1):
                return (2**31 - 1)
            else:
                return int(res)


(2) Find All Anagrams in a String

class Solution:
    def findAnagrams(self, s: str, p: str) -> List[int]:
        if len(s)<len(p):
            return []
        else:
            res=[]
            n=len(p)
            map=dict()
            #counting letters in p
            for i in string.ascii_lowercase:
                map.update({i:p.count(i)})
            window=s[0:n]
            mapw=dict()
            for i in string.ascii_lowercase:
                mapw.update({i:window.count(i)})
            if map==mapw:
                res.append(0)
            for j in range(1,len(s)-len(p)+1):
                mapw.update({s[j-1]:mapw[s[j-1]]-1})
                mapw.update({s[j+n-1]:mapw[s[j+n-1]]+1})
                if map==mapw:
                    res.append(j)
            return res

(3) Reverse Words in a String

class Solution:
    def reverseWords(self, s: str) -> str:
        arr = s.split()
        res = []
        for i in range(len(arr) -1, -1, -1):
            res.append(arr[i])
                    
        return ' '.join(res)


